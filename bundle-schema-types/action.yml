name: "Grafana Bundle Schema Types"
description: "Downloads Grafana plugin schema and generates TypeScript types for plugin-extension-types."

outputs:
  typesFilePath:
    description: "The path to the generated types file."
    value: ${{ steps.set-outputs.outputs.typesFilePath }}

inputs:
  node-version:
    description: "Version of node"
    required: false
    default: "24"

runs:
  using: "composite"
  steps:
    - name: Check if repository lives within the grafana organization
      if: ${{ github.repository_owner != 'grafana' }}
      run: |
        echo "This workflow can only be run from within the Grafana organization."
        exit 1
      shell: bash

    - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: "${{ inputs.node-version }}"

    - id: get-secrets
      uses: grafana/shared-workflows/actions/get-vault-secrets@9f37f656e063f0ad0b0bfc38d49894b57d363936 # v1.2.1
      with:
        common_secrets: |
          GITHUB_APP_ID=plugins-platform-bot-app:app-id
          GITHUB_APP_PRIVATE_KEY=plugins-platform-bot-app:private-key
        export_env: false

    - name: Generate token
      id: generate-token
      uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
      with:
        app-id: ${{ fromJSON(steps.get-secrets.outputs.secrets).GITHUB_APP_ID }}
        private-key: ${{ fromJSON(steps.get-secrets.outputs.secrets).GITHUB_APP_PRIVATE_KEY }}
        owner: grafana
        repositories: |
            plugin-extension-types

    - name: Clone NPM types package repo
      run: |
        cd ..
        gh auth status
        gh repo clone grafana/plugin-extension-types
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Download plugin schema
      run: |
        curl -o plugin.schema.json "https://raw.githubusercontent.com/grafana/grafana/main/docs/sources/developers/plugins/plugin.schema.json"
        echo "Downloaded plugin schema from https://raw.githubusercontent.com/grafana/grafana/main/docs/sources/developers/plugins/plugin.schema.json"
      shell: bash

    - name: Generate TypeScript types from schema
      run: |
        # Modify the schema title to generate PluginSchema interface instead of Plugin
        jq '.title = "PluginSchema"' plugin.schema.json > plugin-schema-modified.json
        # Create the plugin-schema subdirectory if it doesn't exist
        mkdir -p ../plugin-extension-types/types/plugin-schema
        npx -y --package=json-schema-to-typescript json2ts plugin-schema-modified.json > ../plugin-extension-types/types/plugin-schema/index.d.ts
        echo "Generated TypeScript types from plugin schema"
      shell: bash

    - name: Check diff for changes
      id: check-diff
      run: |
        cd ../plugin-extension-types
        if [[ -n $(git status --porcelain) ]]; then
          echo "Changes to schema types detected..."
          echo "has-changes=true" >> $GITHUB_OUTPUT
        else
          echo "No changes found"
          echo "has-changes=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Create branch
      if: ${{ steps.check-diff.outputs.has-changes == 'true' }}
      id: create-branch
      run: |
        cd ../plugin-extension-types
        git config --local user.name grafana-plugins-platform-bot[bot]
        git config --local user.email 144369747+grafana-plugins-platform-bot[bot]@users.noreply.github.com

        BRANCH_NAME="schema-types-update-$(date +%Y%m%d%H%M%S)"
        echo "branch-name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        git checkout -b $BRANCH_NAME
        git add .
        git commit -m "types: updating plugin schema types"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/grafana/plugin-extension-types $BRANCH_NAME
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Create or Update PR
      if: ${{ steps.check-diff.outputs.has-changes == 'true' }}
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        cd ../plugin-extension-types

        PR_NUMBER=$(gh pr list --base main --head ${{ steps.create-branch.outputs.branch-name }} --json number -q '.[0].number')

        PR_BODY=$(cat <<EOF
        Hello! ðŸ‘‹

        This PR was auto generated by the Grafana Bundle Schema Types action.

        **Notes for reviewer:**
        This is an auto-generated PR which downloaded the latest plugin schema from Grafana and generated TypeScript types using \`json-schema-to-typescript\`.
        Please review the changes thoroughly before merging.
        EOF
        )

        if [ -z "$PR_NUMBER" ]; then
          gh pr create --base main --head ${{ steps.create-branch.outputs.branch-name }} --title "Chore: Update plugin schema types" --body "$PR_BODY" --label "types-update"
          PR_NUMBER=$(gh pr list --base main --head ${{ steps.create-branch.outputs.branch-name }} --json number -q '.[0].number')
          gh pr merge --auto $PR_NUMBER
        fi
      shell: bash

    - name: Set outputs
      id: set-outputs
      run: |
        echo "typesFilePath=../plugin-extension-types/types/plugin-schema/index.d.ts" >> $GITHUB_OUTPUT
      shell: bash
