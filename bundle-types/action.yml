name: "Grafana Bundle Types"
description: "Bundles a Grafana plugins types and pushes them to npm."

outputs:
  typesFilePath:
    description: "The path to the built types file."
    value: ${{ steps.set-outputs.outputs.typesFilePath }}

inputs:
  entry-point:
    description: "Location of types file to bundle."
    required: false
    default: "./src/types/index.ts"
  ts-config:
    description: "A path to the tsconfig file to use when bundling types."
    required: false
    default: ""
  node-version:
    description: "Version of node"
    required: false
    default: "20"
  plugin-json-path:
    description: "A path to the plugins plugin.json file."
    required: false
    default: "src/plugin.json"
  package-json-path:
    description: "A path to the plugins package.json file."
    required: false
    default: "package.json"

runs:
  using: "composite"
  steps:
    - name: Check if repository lives within the grafana organization
      if: ${{ github.repository_owner != 'grafana' }}
      run: |
        echo "This workflow can only be run from within the Grafana organization."
        exit 1
      shell: bash

    - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: "${{ inputs.node-version }}"

    - name: Install dependencies
      run: ${{ github.action_path }}/pm.sh install
      shell: bash

    - name: Get plugin id and version
      id: metadata
      run: |
        PLUGIN_ID=$(cat $PLUGIN_JSON_PATH | jq -r .id)
        echo "plugin-id=${PLUGIN_ID}" >> $GITHUB_OUTPUT
        PLUGIN_VERSION=$(cat $PACKAGE_JSON_PATH | jq -r .version)
        echo "plugin-version=${PLUGIN_VERSION}" >> $GITHUB_OUTPUT
      shell: bash
      env:
        PLUGIN_JSON_PATH: ${{ inputs.plugin-json-path }}
        PACKAGE_JSON_PATH: ${{ inputs.package-json-path }}

    - id: get-secrets
      uses: grafana/shared-workflows/actions/get-vault-secrets@9f37f656e063f0ad0b0bfc38d49894b57d363936 # v1.2.1
      with:
        common_secrets: |
          GITHUB_APP_ID=plugins-platform-bot-app:app-id
          GITHUB_APP_PRIVATE_KEY=plugins-platform-bot-app:private-key
        export_env: false

    - name: Generate token
      id: generate-token
      uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
      with:
        app-id: ${{ fromJSON(steps.get-secrets.outputs.secrets).GITHUB_APP_ID }}
        private-key: ${{ fromJSON(steps.get-secrets.outputs.secrets).GITHUB_APP_PRIVATE_KEY }}
        owner: grafana
        repositories: |
            plugin-extension-types



    - name: Clone NPM types package repo
      run: |
        cd ..
        gh auth status
        gh repo clone grafana/plugin-extension-types
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Bundle types
      run: npx -y @grafana/plugin-types-bundler@latest --entry-point $ENTRY_POINT --ts-config $TS_CONFIG --out-dir="../plugin-extension-types/types/${PLUGIN_ID}"
      shell: bash
      env:
        ENTRY_POINT: ${{ inputs.entry-point }}
        TS_CONFIG: ${{ inputs.ts-config }}
        PLUGIN_ID: ${{ steps.metadata.outputs.plugin-id }}

    - name: Check diff for changes
      id: check-diff
      run: |
        cd ../plugin-extension-types
        if [[ -n $(git status --porcelain) ]]; then
          echo "Changes to $ENTRY_POINT detected..."
          echo "has-changes=true" >> $GITHUB_OUTPUT
        else
          echo "No changes found"
          echo "has-changes=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
      env:
        ENTRY_POINT: ${{ inputs.entry-point }}

    - name: Create branch
      if: ${{ steps.check-diff.outputs.has-changes == 'true' }}
      run: |
        cd ../plugin-extension-types
        git config --local user.name grafana-plugins-platform-bot[bot]
        git config --local user.email 144369747+grafana-plugins-platform-bot[bot]@users.noreply.github.com

        git checkout -b $PLUGIN_ID-$PLUGIN_VERSION
        git add .
        git commit -m "types: updating $PLUGIN_ID"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/grafana/plugin-extension-types $PLUGIN_ID-$PLUGIN_VERSION
      shell: bash
      env:
        PLUGIN_ID: ${{ steps.metadata.outputs.plugin-id }}
        PLUGIN_VERSION: ${{ steps.metadata.outputs.plugin-version }}
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Create or Update PR
      if: ${{ steps.check-diff.outputs.has-changes == 'true' }}
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        PLUGIN_ID: ${{ steps.metadata.outputs.plugin-id }}
        PLUGIN_VERSION: ${{ steps.metadata.outputs.plugin-version }}
      run: |
        cd ../plugin-extension-types

        PR_NUMBER=$(gh pr list --base main --head $PLUGIN_ID-$PLUGIN_VERSION --json number -q '.[0].number')

        PR_BODY=$(cat <<EOF
        Hello! ðŸ‘‹

        This PR was auto generated by the Grafana Bundle Types action by $PLUGIN_ID plugin version $PLUGIN_VERSION.

        **Notes for reviewer:**
        This is an auto-generated PR which ran \`npx -y @grafana/plugin-types-bundler@latest\`.
        Please review the changes thoroughly before merging.
        EOF
        )

        if [ -z "$PR_NUMBER" ]; then
          gh pr create --base main --head $PLUGIN_ID-$PLUGIN_VERSION --title "Chore: Add $PLUGIN_ID-$PLUGIN_VERSION types" --body "$PR_BODY" --label "types-update"
          PR_NUMBER=$(gh pr list --base main --head $PLUGIN_ID-$PLUGIN_VERSION --json number -q '.[0].number')
          gh pr merge --auto $PR_NUMBER
        fi
      shell: bash
