name: "Grafana Bundle Types"
description: "Bundles a Grafana plugins types and pushes them to npm."

outputs:
  typesFilePath:
    description: "The path to the built types file."
    value: ${{ steps.set-outputs.outputs.typesFilePath }}

inputs:
  entry-point:
    description: "Location of types file to bundle."
    required: false
    default: "./src/types/index.ts"
  ts-config:
    description: "A path to the tsconfig file to use when bundling types."
    required: false
    default: ""
  node-version:
    description: "Version of node"
    required: false
    default: "20"
  plugin-json-path:
    description: "A path to the plugins plugin.json file."
    required: false
    default: "src/plugin.json"
  package-json-path:
    description: "A path to the plugins package.json file."
    required: false
    default: "package.json"

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: "${{ inputs.node-version }}"

    - name: Install dependencies
      run: ${{ github.action_path }}/pm.sh install
      shell: bash

    - name: Get plugin id and version
      id: metadata
      run: |
        PLUGIN_ID=$(cat ${{ inputs.plugin-json-path }} | jq -r .id)
        echo "plugin-id=${PLUGIN_ID}" >> $GITHUB_OUTPUT
        PLUGIN_VERSION=$(cat ${{ inputs.package-json-path }} | jq -r .version)
        echo "plugin-version=${PLUGIN_VERSION}" >> $GITHUB_OUTPUT
      shell: bash

    - id: get-secrets
      uses: grafana/shared-workflows/actions/get-vault-secrets@main
      with:
        common_secrets: |
          GITHUB_APP_ID=plugins-platform-bot-app:app-id
          GITHUB_APP_PRIVATE_KEY=plugins-platform-bot-app:private-key

    - name: Generate token
      id: generate-token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ env.GITHUB_APP_ID }}
        private_key: ${{ env.GITHUB_APP_PRIVATE_KEY }}

    - name: Clone NPM types package repo
      run: |
        cd ..
        gh auth status
        gh repo clone grafana/plugin-extension-types
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Bundle types
      run: npx -y @grafana/plugin-types-bundler@latest --entry-point ${{ inputs.entry-point }} --ts-config ${{ inputs.ts-config }} --out-dir="../plugin-extension-types/types/${{ steps.metadata.outputs.plugin-id }}"
      shell: bash

    - name: Check diff for changes
      id: check-diff
      run: |
        cd ../plugin-extension-types
        if [[ -n $(git status --porcelain) ]]; then
          echo "Changes to ${{ inputs.entry-point }} detected..."
          echo "has-changes=true" >> $GITHUB_OUTPUT
        else
          echo "No changes found"
          echo "has-changes=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Create branch
      if: ${{ steps.check-diff.outputs.has-changes == 'true' }}
      run: |
        cd ../plugin-extension-types
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b ${{ steps.metadata.outputs.plugin-id }}-${{ steps.metadata.outputs.plugin-version }}
        git add .
        git commit -m "types: updating ${{ steps.metadata.outputs.plugin-id }}"
        git push https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/grafana/plugin-extension-types ${{ steps.metadata.outputs.plugin-id }}-${{ steps.metadata.outputs.plugin-version }}
      shell: bash

    - name: Create or Update PR
      if: ${{ steps.check-diff.outputs.has-changes == 'true' }}
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      run: |
        cd ../plugin-extension-types

        PR_NUMBER=$(gh pr list --base main --head ${{ steps.metadata.outputs.plugin-id }}-${{ steps.metadata.outputs.plugin-version }} --json number -q '.[0].number')

        PR_BODY=$(cat <<EOF
        Hello! ðŸ‘‹

        This PR was auto generated by the Grafana Bundle Types action by ${{ steps.metadata.outputs.plugin-id }} plugin version ${{ steps.metadata.outputs.plugin-version }}.

        **Notes for reviewer:**
        This is an auto-generated PR which ran \`npx -y @grafana/plugin-types-bundler@latest\`.
        Please review the changes thoroughly before merging.
        EOF
        )

        if [ -z "$PR_NUMBER" ]; then
          gh pr create --base main --head ${{ steps.metadata.outputs.plugin-id }}-${{ steps.metadata.outputs.plugin-version }} --title "Chore: Add ${{ steps.metadata.outputs.plugin-id }}-${{ steps.metadata.outputs.plugin-version }} types" --body "$PR_BODY" --label "types-update"
          PR_NUMBER=$(gh pr list --base main --head ${{ steps.metadata.outputs.plugin-id }}-${{ steps.metadata.outputs.plugin-version }} --json number -q '.[0].number')
          gh pr merge --auto $PR_NUMBER
        fi
      shell: bash
