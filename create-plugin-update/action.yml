name: "Grafana Create Plugin Update"
description: "Runs create-plugin update within a Grafana plugin and opens a PR with the changes"

inputs:
  token:
    description: "Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`."
    required: false
    default: "${{ github.token }}"
  base:
    description: "Sets the pull request base branch"
    required: false
    default: "main"
  node-version:
    description: "Version of node"
    required: false
    default: "20"

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: "${{ inputs.node-version }}"

    - name: Get latest version of create-plugin package
      id: get-latest-version
      run: |
        echo "latest_version=$(npx -y @grafana/create-plugin@latest version | sed 's/.*@//' | sed 's/ *$//' | sed '/^$/d')" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Checkout Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
        ref: ${{ inputs.base }}

    - name: Get version from .config/.cprc.json
      id: get-config-version
      run: |
        echo "config_version=$(jq -r '.version' .config/.cprc.json)" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Compare versions
      id: compare-versions
      run: |
        if [ "$LATEST_VERSION" != "$CONFIG_VERSION" ]; then
          echo "update_needed=true" >> "$GITHUB_OUTPUT"
        else
          echo "update_needed=false" >> "$GITHUB_OUTPUT"
        fi
      shell: bash
      env:
        LATEST_VERSION: ${{ steps.get-latest-version.outputs.latest_version }}
        CONFIG_VERSION: ${{ steps.get-config-version.outputs.config_version }}

    - name: Update the configs
      if: steps.compare-versions.outputs.update_needed == 'true'
      run: |
        ${{ github.action_path }}/pm.sh update
        ${{ github.action_path }}/pm.sh install
      shell: bash

    - name: Create branch
      if: steps.compare-versions.outputs.update_needed == 'true'
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b update-grafana-create-plugin-${LATEST_VERSION}
        git add .
        git commit -m "chore: update configuration to create-plugin $LATEST_VERSION"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} update-grafana-create-plugin-${LATEST_VERSION}
      shell: bash
      env:
        LATEST_VERSION: ${{ steps.get-latest-version.outputs.latest_version }}
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Create or Update PR
      if: steps.compare-versions.outputs.update_needed == 'true'
      env:
        GH_TOKEN: ${{ inputs.token }}
        LATEST_VERSION: ${{ steps.get-latest-version.outputs.latest_version }}
        CONFIG_VERSION: ${{ steps.get-config-version.outputs.config_version }}
        BASE: ${{ inputs.base }}
      run: |
        PR_NUMBER=$(gh pr list --base $BASE --head update-grafana-create-plugin-${LATEST_VERSION} --json number -q '.[0].number')

        PR_TITLE="chore: bump @grafana/create-plugin configuration to $LATEST_VERSION"

        PR_BODY=$(cat <<EOF
        Bumps [\`@grafana/create-plugin\`](https://github.com/grafana/plugin-tools/tree/main/packages/create-plugin) configuration from $CONFIG_VERSION to $LATEST_VERSION.

        **Notes for reviewer:**
        This is an auto-generated PR which ran \`@grafana/create-plugin update\`.
        Please consult the create-plugin [CHANGELOG.md](https://github.com/grafana/plugin-tools/blob/main/packages/create-plugin/CHANGELOG.md) to understand what may have changed.
        Please review the changes thoroughly before merging.
        EOF
        )

        if [ -z "$PR_NUMBER" ]; then
          gh pr create --base $BASE --head update-grafana-create-plugin-${LATEST_VERSION} --title "$PR_TITLE" --body "$PR_BODY"
        else
          gh pr edit $PR_NUMBER --title "$PR_TITLE" --body "$PR_BODY"
        fi
      shell: bash
