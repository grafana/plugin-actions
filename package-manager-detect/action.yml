name: "Package Manager Detect"
description: "Detects the Node.js package manager used in a project"
inputs:
  working-directory:
    description: "The working directory to check"
    required: false
    default: "."
outputs:
  name:
    description: "The name of the package manager"
    value: ${{ steps.detect-package-manager.outputs.name }}
  install:
    description: "The install command"
    value: ${{ steps.detect-package-manager.outputs.install }}
  frozenInstall:
    description: "The frozen install command"
    value: ${{ steps.detect-package-manager.outputs.frozen-install }}
  globalInstall:
    description: "The global install command"
    value: ${{ steps.detect-package-manager.outputs.global-install }}
  run:
    description: "The run command"
    value: ${{ steps.detect-package-manager.outputs.run }}
  exec:
    description: "The exec command"
    value: ${{ steps.detect-package-manager.outputs.exec }}

runs:
  using: "composite"
  steps:
    - name: Detect package manager
      id: detect-package-manager
      run: |
        # Run pm-detect and capture the JSON output
        PM_OUTPUT=$(npx -y pm-detect --working-dir "$WORKING_DIRECTORY")

        # Parse the JSON and extract individual values
        NAME=$(echo "$PM_OUTPUT" | jq -r '.name')
        LOCK_FILE_PATH=$(echo "$PM_OUTPUT" | jq -r '.lockFilePath')
        AGENT=$(echo "$PM_OUTPUT" | jq -r '.agent')
        INSTALL=$(echo "$PM_OUTPUT" | jq -r '.install')
        FROZEN_INSTALL=$(echo "$PM_OUTPUT" | jq -r '.["frozen-install"]')
        GLOBAL_INSTALL=$(echo "$PM_OUTPUT" | jq -r '.["global-install"]')
        UNINSTALL=$(echo "$PM_OUTPUT" | jq -r '.uninstall')
        GLOBAL_UNINSTALL=$(echo "$PM_OUTPUT" | jq -r '.["global-uninstall"]')
        UPDATE=$(echo "$PM_OUTPUT" | jq -r '.update')
        RUN_CMD=$(echo "$PM_OUTPUT" | jq -r '.run')
        EXEC_CMD=$(echo "$PM_OUTPUT" | jq -r '.exec')
        EXEC_LOCAL_CMD=$(echo "$PM_OUTPUT" | jq -r '.exec-local')

        # Set outputs
        echo "name=$NAME" >> $GITHUB_OUTPUT
        echo "lock-file-path=$LOCK_FILE_PATH" >> $GITHUB_OUTPUT
        echo "agent=$AGENT" >> $GITHUB_OUTPUT
        echo "install=$INSTALL" >> $GITHUB_OUTPUT
        echo "frozen-install=$FROZEN_INSTALL" >> $GITHUB_OUTPUT
        echo "global-install=$GLOBAL_INSTALL" >> $GITHUB_OUTPUT
        echo "uninstall=$UNINSTALL" >> $GITHUB_OUTPUT
        echo "global-uninstall=$GLOBAL_UNINSTALL" >> $GITHUB_OUTPUT
        echo "update=$UPDATE" >> $GITHUB_OUTPUT
        echo "run=$RUN_CMD" >> $GITHUB_OUTPUT
        echo "exec=$EXEC_CMD" >> $GITHUB_OUTPUT
        echo "exec-local=$EXEC_LOCAL_CMD" >> $GITHUB_OUTPUT
      shell: bash
      env:
        WORKING_DIRECTORY: ${{ inputs.working-directory }}
